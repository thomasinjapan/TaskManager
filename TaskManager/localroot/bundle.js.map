{
  "version": 3,
  "sources": ["../src/EventHandling.ts", "../src/counter.ts", "../src/counter-ui.ts", "../src/app-ui.ts"],
  "sourcesContent": ["\uFEFF/** src/eventemitter.ts **/\r\nexport class EventEmitter extends EventTarget {\r\n    protected emit(type: string, args: unknown[]): void {\r\n        this.dispatchEvent(new CustomEvent(type, { detail: args }));\r\n    }\r\n}", "\uFEFF/**  src/counter.ts  **/\r\nimport { EventEmitter } from './EventHandling.js';\r\n\r\nexport class Counter extends EventEmitter {\r\n    private _count: number;\r\n\r\n    constructor(initialValue: number = 0) {\r\n        super();\r\n        this._count = initialValue;\r\n    }\r\n\r\n    get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    increment(): number {\r\n        this._count += 1;\r\n        this.emit('change', [this.count]);\r\n        console.log(`tried to trigger change`);\r\n        return this._count;\r\n    }\r\n\r\n    decrement(): number {\r\n        this._count -= 1;\r\n        return this._count;\r\n    }\r\n\r\n    reset(): number {\r\n        this._count = 0;\r\n        return this._count;\r\n    }\r\n}", "\uFEFF/**  src/counter-ui.ts  **/\nimport { Counter } from './counter.js';\n\n// UI class for Counter component\nexport class CounterUI {\n    private _container: HTMLElement;\n    private _counter: Counter;\n\n    private _ui_lblCount: HTMLElement | null = null;\n\n    private _design: string = `\n            <div class=\"counter-container\">\n                <h1>TypeScript Counter</h1>\n                <div id=\"count-display\">0</div>\n                <div>\n                    <button id=\"decrement-btn\">Decrement</button>\n                    <button id=\"reset-btn\">Reset</button>\n                    <button id=\"increment-btn\">Increment</button>\n                </div>\n            </div>\n        `;\n\n    /** Constructor and UI **/\n    constructor(container: HTMLElement, counter: Counter) {\n        this._container = container;\n        this._counter = counter;\n\n        // Render the counter UI\n        this._container.innerHTML = this._design\n\n        // Get the count display element\n        this._ui_lblCount = this.getUIElementById('count-display');\n\n        // Initialize the display with current count\n        this.updateUI();\n\n        // Setup event listeners\n        this.setupEventListeners();\n        this.setupCounterEventHandlers();\n    }\n\n    private getUIElementById(id: string): HTMLElement | null {\n        return this._container.querySelector(`#${id}`);\n    }\n\n    /** Event handlers **/\n    private setupEventListeners(): void {\n        const btnIncrement: HTMLElement | null = this.getUIElementById('increment-btn');\n        const btnDecrement: HTMLElement | null = this.getUIElementById('decrement-btn');\n        const btnReset: HTMLElement | null = this.getUIElementById('reset-btn');\n\n        if (btnIncrement) {\n            btnIncrement.addEventListener('click', this.handleIncrement.bind(this));\n        }\n\n        if (btnDecrement) {\n            btnDecrement.addEventListener('click', this.handleDecrement.bind(this));\n        }\n\n        if (btnReset) {\n            btnReset.addEventListener('click', this.handleReset.bind(this));\n        }\n    }\n\n    private setupCounterEventHandlers(): void {\n        // Use a single event listener for all counter events\n        this._counter.addEventListener('change', this.onChange.bind(this));\n    }\n\n    private handleIncrement(): void {\n        const newCount = this._counter.increment();\n        this.updateUI();\n    }\n\n    private handleDecrement(): void {\n        const newCount = this._counter.decrement();\n        this.updateUI();\n    }\n\n    private handleReset(): void {\n        const newCount = this._counter.reset();\n        this.updateUI();\n    }\n\n    private onChange(e: Event): void {\n        console.log(`Counter triggered`);\n        const [newValue] = (e as CustomEvent).detail;\n        console.log(`Counter changed to: ${newValue}`);\n    }\n\n    /** Logic **/\n\n    updateUI(): void {\n        if (!this._ui_lblCount) return;\n        this._ui_lblCount.textContent = this._counter.count.toString();\n    }\n\n\n\n}", "\uFEFF/**  src/app-ui.ts  **/\n\nimport { Counter } from './counter.js';\nimport { CounterUI } from './counter-ui.js';\n\n// Wait for DOM to be fully loaded\nfunction initializeApp(): void {\n    const appContainer = document.getElementById('app-ui') as HTMLElement;\n    if (!appContainer) {\n        throw new Error('App container not found');\n    }\n    console.log('App container found:', appContainer);\n\n    // Initialize counter and counter UI\n    const counter = new Counter();\n    const counterUI = new CounterUI(appContainer, counter);\n}\n\ndocument.addEventListener('DOMContentLoaded', initializeApp);"],
  "mappings": "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",
  "names": []
}
