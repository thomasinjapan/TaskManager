{
  "version": 3,
  "sources": ["../../../src/baseclasses/baseui.ts"],
  "sourcesContent": ["\uFEFF/**  src/baseui.ts  **/\r\n\r\nexport class BaseUI {\r\n    _container: HTMLElement;\r\n\r\n    /** dummy design info to be sure that it is available in UI initialization when called**/\r\n    _cssClass: string = '';\r\n    _design: string = '';\r\n\r\n    /** Constructor and UI **/\r\n    constructor(container: HTMLElement) {\r\n        this._container = container;\r\n    }\r\n\r\n\r\n    /** Logic **/\r\n\r\n    /** initializes the UI with current design and css class info*/\r\n    initializeUI(): void {\r\n        // Render the counter \r\n        this._container.innerHTML = this._design\r\n        this._cssClass ? this._container.classList.add(this._cssClass) : null;\r\n    }\r\n\r\n    /**\r\n     * gets html element by id from the container\r\n     * @param id id of the element to get\r\n     * @returns element with the specified id or null if not found\r\n     */\r\n    public getUIElementById<T extends HTMLElement>(id: string): T | null {\r\n        return this._container.querySelector(`#${id}`) as T | null;\r\n    }\r\n\r\n}"],
  "mappings": "AAEO,MAAM,OAAO;AAAA;AAAA,EAQhB,YAAY,WAAwB;AAJpC;AAAA,qBAAoB;AACpB,mBAAkB;AAId,SAAK,aAAa;AAAA,EACtB;AAAA;AAAA;AAAA,EAMA,eAAqB;AAEjB,SAAK,WAAW,YAAY,KAAK;AACjC,SAAK,YAAY,KAAK,WAAW,UAAU,IAAI,KAAK,SAAS,IAAI;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,iBAAwC,IAAsB;AACjE,WAAO,KAAK,WAAW,cAAc,IAAI,EAAE,EAAE;AAAA,EACjD;AAEJ;",
  "names": []
}
