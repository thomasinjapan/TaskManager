{
  "version": 3,
  "sources": ["../../src/tasklist.ts"],
  "sourcesContent": ["\uFEFF/**  src/tasklist.ts  **/\r\nimport { EventEmitter } from './EventHandling.js';\r\nimport { Task } from './task.js'; \r\n\r\nexport class Tasklist extends EventEmitter {\r\n    private _title: string;\r\n    private _tasks: Task[] = [];\r\n\r\n    /** list of all valid events **/\r\n    public EVENT_TITLE_UPDATED: string = 'title_updated';\r\n    public EVENT_TASK_ADDED: string = 'task_added';\r\n    public EVENT_TASK_REMOVED: string = 'task_removed';\r\n\r\n    constructor(initialTitle: string) {\r\n        super();\r\n        this._title = initialTitle;\r\n    }\r\n\r\n    get title(): string {\r\n        return this._title;\r\n    }\r\n\r\n    set title(value: string) {\r\n        this._title = value;\r\n        this.emit(this.EVENT_TITLE_UPDATED, []);\r\n    }\r\n\r\n    public addTask(task: Task): void {\r\n        this._tasks.push(task);\r\n        this.emit(this.EVENT_TASK_ADDED, [task,this._tasks.length]);\r\n    }\r\n\r\n    public removeTask(task: Task): void {\r\n        const index = this._tasks.indexOf(task);\r\n        if (index !== -1) {\r\n            this._tasks.splice(index, 1);\r\n            this.emit(this.EVENT_TASK_REMOVED, [task]);\r\n        }\r\n    }\r\n}"],
  "mappings": "AACA,SAAS,oBAAoB;AAGtB,MAAM,iBAAiB,aAAa;AAAA,EASvC,YAAY,cAAsB;AAC9B,UAAM;AARV,SAAQ,SAAiB,CAAC;AAG1B;AAAA,SAAO,sBAA8B;AACrC,SAAO,mBAA2B;AAClC,SAAO,qBAA6B;AAIhC,SAAK,SAAS;AAAA,EAClB;AAAA,EAEA,IAAI,QAAgB;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAI,MAAM,OAAe;AACrB,SAAK,SAAS;AACd,SAAK,KAAK,KAAK,qBAAqB,CAAC,CAAC;AAAA,EAC1C;AAAA,EAEO,QAAQ,MAAkB;AAC7B,SAAK,OAAO,KAAK,IAAI;AACrB,SAAK,KAAK,KAAK,kBAAkB,CAAC,MAAK,KAAK,OAAO,MAAM,CAAC;AAAA,EAC9D;AAAA,EAEO,WAAW,MAAkB;AAChC,UAAM,QAAQ,KAAK,OAAO,QAAQ,IAAI;AACtC,QAAI,UAAU,IAAI;AACd,WAAK,OAAO,OAAO,OAAO,CAAC;AAC3B,WAAK,KAAK,KAAK,oBAAoB,CAAC,IAAI,CAAC;AAAA,IAC7C;AAAA,EACJ;AACJ;",
  "names": []
}
