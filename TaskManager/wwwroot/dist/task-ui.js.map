{
  "version": 3,
  "sources": ["../../src/task-ui.ts"],
  "sourcesContent": ["\uFEFF/**  src/task-ui.ts  **/\nimport { Task } from './task.js';\n\nexport class TaskUI {\n    private _container: HTMLElement;\n    private _task: Task;\n\n    private _lblTaskTitle: HTMLElement | null = null\n    private _lblTaskDescription: HTMLElement | null = null;\n\n    private _txtTaskTitle: HTMLInputElement | null = null;\n    private _txtTaskDescription: HTMLTextAreaElement | null = null;\n\n    private _design: string = `\n            <div class=\"task-ui\">\n                <h1>Task</h1>\n                <div id=\"task-title\">NOT DEFINED</div>\n                <input type=\"text\" id=\"task-title-edit\" />\n                <div id=\"task-description\"></div>\n                <textarea id=\"task-description-edit\"></textarea>\n            </div>\n        `;\n\n\n    /** Constructor and UI **/\n    constructor(container: HTMLElement, task: Task) {\n        this._container = container;\n        this._task = task;\n\n        // Render the counter UI\n        this._container.innerHTML = this._design\n\n        // Get the display elements to interact with\n        this._lblTaskTitle = this.getUIElementById('task-title')\n        this._lblTaskDescription = this.getUIElementById('task-description');\n\n        this._txtTaskTitle = this.getUIInputElementById('task-title-edit')\n        this._txtTaskDescription = this.getUITextAreaElementById('task-description-edit');\n\n        // Initialize the display with current count\n        this.updateUI();\n\n        // Setup event listeners\n        this.setupDOMEventListeners();\n        this.setupObjectEventHandlers();\n    }\n\n    private getUIElementById(id: string): HTMLElement | null {\n        return this._container.querySelector(`#${id}`);\n    }\n\n    private getUIInputElementById(id: string): HTMLInputElement | null {\n        return this._container.querySelector(`#${id}`);\n    }\n\n    private getUITextAreaElementById(id: string): HTMLTextAreaElement | null {\n        return this._container.querySelector(`#${id}`);\n    }\n\n    /** Event handlers **/\n    private setupDOMEventListeners(): void {\n        this._txtTaskTitle?.addEventListener('change', this.onTaskTitleChange.bind(this));\n        this._txtTaskDescription?.addEventListener('change', this.onTaskDescriptionChange.bind(this));\n    }\n\n    private setupObjectEventHandlers(): void {\n        // Use a single event listener for all counter events\n        this._task.addEventListener(this._task.EVENT_UPDATED, this.onTaskUpdated.bind(this));\n    }\n\n    private onTaskTitleChange(e: Event): void {\n        this._task.title = (e.target as HTMLInputElement).value;\n    }\n\n    private onTaskDescriptionChange(e: Event): void {\n        this._task.description = (e.target as HTMLTextAreaElement).value;\n    }\n\n    private onTaskUpdated(e: Event): void {\n        this.updateUI();\n        console.log(`Task was updated`);\n    }\n\n    /** Logic **/\n\n    updateUI(): void {\n        if (!this._lblTaskDescription || !this._lblTaskTitle) return;\n\n        this._lblTaskTitle.textContent = this._task.title.toString();\n        this._lblTaskDescription.textContent = this._task.description.toString();\n    }\n\n\n\n}"],
  "mappings": "AAGO,MAAM,OAAO;AAAA;AAAA,EAsBhB,YAAY,WAAwB,MAAY;AAlBhD,SAAQ,gBAAoC;AAC5C,SAAQ,sBAA0C;AAElD,SAAQ,gBAAyC;AACjD,SAAQ,sBAAkD;AAE1D,SAAQ,UAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAatB,SAAK,aAAa;AAClB,SAAK,QAAQ;AAGb,SAAK,WAAW,YAAY,KAAK;AAGjC,SAAK,gBAAgB,KAAK,iBAAiB,YAAY;AACvD,SAAK,sBAAsB,KAAK,iBAAiB,kBAAkB;AAEnE,SAAK,gBAAgB,KAAK,sBAAsB,iBAAiB;AACjE,SAAK,sBAAsB,KAAK,yBAAyB,uBAAuB;AAGhF,SAAK,SAAS;AAGd,SAAK,uBAAuB;AAC5B,SAAK,yBAAyB;AAAA,EAClC;AAAA,EAEQ,iBAAiB,IAAgC;AACrD,WAAO,KAAK,WAAW,cAAc,IAAI,EAAE,EAAE;AAAA,EACjD;AAAA,EAEQ,sBAAsB,IAAqC;AAC/D,WAAO,KAAK,WAAW,cAAc,IAAI,EAAE,EAAE;AAAA,EACjD;AAAA,EAEQ,yBAAyB,IAAwC;AACrE,WAAO,KAAK,WAAW,cAAc,IAAI,EAAE,EAAE;AAAA,EACjD;AAAA;AAAA,EAGQ,yBAA+B;AACnC,SAAK,eAAe,iBAAiB,UAAU,KAAK,kBAAkB,KAAK,IAAI,CAAC;AAChF,SAAK,qBAAqB,iBAAiB,UAAU,KAAK,wBAAwB,KAAK,IAAI,CAAC;AAAA,EAChG;AAAA,EAEQ,2BAAiC;AAErC,SAAK,MAAM,iBAAiB,KAAK,MAAM,eAAe,KAAK,cAAc,KAAK,IAAI,CAAC;AAAA,EACvF;AAAA,EAEQ,kBAAkB,GAAgB;AACtC,SAAK,MAAM,QAAS,EAAE,OAA4B;AAAA,EACtD;AAAA,EAEQ,wBAAwB,GAAgB;AAC5C,SAAK,MAAM,cAAe,EAAE,OAA+B;AAAA,EAC/D;AAAA,EAEQ,cAAc,GAAgB;AAClC,SAAK,SAAS;AACd,YAAQ,IAAI,kBAAkB;AAAA,EAClC;AAAA;AAAA,EAIA,WAAiB;AACb,QAAI,CAAC,KAAK,uBAAuB,CAAC,KAAK,cAAe;AAEtD,SAAK,cAAc,cAAc,KAAK,MAAM,MAAM,SAAS;AAC3D,SAAK,oBAAoB,cAAc,KAAK,MAAM,YAAY,SAAS;AAAA,EAC3E;AAIJ;",
  "names": []
}
