{
  "version": 3,
  "sources": ["../../src/counter-ui.ts"],
  "sourcesContent": ["\uFEFF/**  src/counter-ui.ts  **/\r\nimport { Counter } from './counter.js';\r\n\r\n// UI class for Counter component\r\nexport class CounterUI {\r\n    private _container: HTMLElement;\r\n    private _counter: Counter;\r\n\r\n    private _lblCount: HTMLElement | null = null;\r\n    private _btnIncrement: HTMLElement | null = null;\r\n    private _btnDecrement: HTMLElement | null = null;\r\n    private _btnReset: HTMLElement | null = null;\r\n\r\n    private _design: string = `\r\n            <div class=\"counter-container\">\r\n                <h1>TypeScript Counter</h1>\r\n                <div id=\"count-display\">0</div>\r\n                <div>\r\n                    <button id=\"decrement-btn\">Decrement</button>\r\n                    <button id=\"reset-btn\">Reset</button>\r\n                    <button id=\"increment-btn\">Increment</button>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n    /** Constructor and UI **/\r\n    constructor(container: HTMLElement, counter: Counter) {\r\n        this._container = container;\r\n        this._counter = counter;\r\n\r\n        // Render the counter UI\r\n        this._container.innerHTML = this._design\r\n        console.log('Counter UI initialized');\r\n\r\n        // Get the count display element\r\n        this._lblCount = this.getUIElementById('count-display');\r\n\r\n        this._btnIncrement = this.getUIElementById('increment-btn');\r\n        this._btnDecrement = this.getUIElementById('decrement-btn');\r\n        this._btnReset = this.getUIElementById('reset-btn');\r\n        console.log('Buttons initialized:', this._btnIncrement, this._btnDecrement, this._btnReset);\r\n\r\n        // Initialize the display with current count\r\n        this.updateUI();\r\n\r\n        // Setup event listeners\r\n        this.setupEventListeners();\r\n        this.setupCounterEventHandlers();\r\n    }\r\n\r\n    private getUIElementById(id: string): HTMLElement | null {\r\n        return this._container.querySelector(`#${id}`);\r\n    }\r\n\r\n    /** Event handlers **/\r\n    private setupEventListeners(): void {\r\n        this._btnIncrement?.addEventListener('click', this.handleIncrement.bind(this));\r\n        this._btnDecrement?.addEventListener('click', this.handleDecrement.bind(this));\r\n        this._btnReset?.addEventListener('click', this.handleReset.bind(this));\r\n    }\r\n\r\n    private setupCounterEventHandlers(): void {\r\n        // Use a single event listener for all counter events\r\n        this._counter.addEventListener(this._counter.EVENT_CHANGE, this.onChange.bind(this));\r\n    }\r\n\r\n    private handleIncrement(): void {\r\n        const newCount = this._counter.increment();\r\n        this.updateUI();\r\n    }\r\n\r\n    private handleDecrement(): void {\r\n        const newCount = this._counter.decrement();\r\n        this.updateUI();\r\n    }\r\n\r\n    private handleReset(): void {\r\n        const newCount = this._counter.reset();\r\n        this.updateUI();\r\n    }\r\n\r\n    private onChange(e: Event): void {\r\n        console.log('Counter triggered');\r\n        const [newValue] = (e as CustomEvent).detail;\r\n        console.log('Counter changed to: ', newValue);\r\n    }\r\n\r\n    /** Logic **/\r\n\r\n    updateUI(): void {\r\n        if (!this._lblCount) return;\r\n        this._lblCount.textContent = this._counter.count.toString();\r\n    }\r\n\r\n}"],
  "mappings": "AAIO,MAAM,UAAU;AAAA;AAAA,EAsBnB,YAAY,WAAwB,SAAkB;AAlBtD,SAAQ,YAAgC;AACxC,SAAQ,gBAAoC;AAC5C,SAAQ,gBAAoC;AAC5C,SAAQ,YAAgC;AAExC,SAAQ,UAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AActB,SAAK,aAAa;AAClB,SAAK,WAAW;AAGhB,SAAK,WAAW,YAAY,KAAK;AACjC,YAAQ,IAAI,wBAAwB;AAGpC,SAAK,YAAY,KAAK,iBAAiB,eAAe;AAEtD,SAAK,gBAAgB,KAAK,iBAAiB,eAAe;AAC1D,SAAK,gBAAgB,KAAK,iBAAiB,eAAe;AAC1D,SAAK,YAAY,KAAK,iBAAiB,WAAW;AAClD,YAAQ,IAAI,wBAAwB,KAAK,eAAe,KAAK,eAAe,KAAK,SAAS;AAG1F,SAAK,SAAS;AAGd,SAAK,oBAAoB;AACzB,SAAK,0BAA0B;AAAA,EACnC;AAAA,EAEQ,iBAAiB,IAAgC;AACrD,WAAO,KAAK,WAAW,cAAc,IAAI,EAAE,EAAE;AAAA,EACjD;AAAA;AAAA,EAGQ,sBAA4B;AAChC,SAAK,eAAe,iBAAiB,SAAS,KAAK,gBAAgB,KAAK,IAAI,CAAC;AAC7E,SAAK,eAAe,iBAAiB,SAAS,KAAK,gBAAgB,KAAK,IAAI,CAAC;AAC7E,SAAK,WAAW,iBAAiB,SAAS,KAAK,YAAY,KAAK,IAAI,CAAC;AAAA,EACzE;AAAA,EAEQ,4BAAkC;AAEtC,SAAK,SAAS,iBAAiB,KAAK,SAAS,cAAc,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EACvF;AAAA,EAEQ,kBAAwB;AAC5B,UAAM,WAAW,KAAK,SAAS,UAAU;AACzC,SAAK,SAAS;AAAA,EAClB;AAAA,EAEQ,kBAAwB;AAC5B,UAAM,WAAW,KAAK,SAAS,UAAU;AACzC,SAAK,SAAS;AAAA,EAClB;AAAA,EAEQ,cAAoB;AACxB,UAAM,WAAW,KAAK,SAAS,MAAM;AACrC,SAAK,SAAS;AAAA,EAClB;AAAA,EAEQ,SAAS,GAAgB;AAC7B,YAAQ,IAAI,mBAAmB;AAC/B,UAAM,CAAC,QAAQ,IAAK,EAAkB;AACtC,YAAQ,IAAI,wBAAwB,QAAQ;AAAA,EAChD;AAAA;AAAA,EAIA,WAAiB;AACb,QAAI,CAAC,KAAK,UAAW;AACrB,SAAK,UAAU,cAAc,KAAK,SAAS,MAAM,SAAS;AAAA,EAC9D;AAEJ;",
  "names": []
}
