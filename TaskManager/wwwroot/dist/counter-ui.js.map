{
  "version": 3,
  "sources": ["../../src/counter-ui.ts"],
  "sourcesContent": ["\uFEFF/**  src/counter-ui.ts  **/\nimport { Counter } from './counter.js';\n\n// UI class for Counter component\nexport class CounterUI {\n    private _container: HTMLElement;\n    private _counter: Counter;\n\n    private _ui_lblCount: HTMLElement | null = null;\n\n    private _design: string = `\n            <div class=\"counter-container\">\n                <h1>TypeScript Counter</h1>\n                <div id=\"count-display\">0</div>\n                <div>\n                    <button id=\"decrement-btn\">Decrement</button>\n                    <button id=\"reset-btn\">Reset</button>\n                    <button id=\"increment-btn\">Increment</button>\n                </div>\n            </div>\n        `;\n\n    /** Constructor and UI **/\n    constructor(container: HTMLElement, counter: Counter) {\n        this._container = container;\n        this._counter = counter;\n\n        // Render the counter UI\n        this._container.innerHTML = this._design\n\n        // Get the count display element\n        this._ui_lblCount = this.getUIElementById('count-display');\n\n        // Initialize the display with current count\n        this.updateUI();\n\n        // Setup event listeners\n        this.setupEventListeners();\n        this.setupCounterEventHandlers();\n    }\n\n    private getUIElementById(id: string): HTMLElement | null {\n        return this._container.querySelector(`#${id}`);\n    }\n\n    /** Event handlers **/\n    private setupEventListeners(): void {\n        const btnIncrement: HTMLElement | null = this.getUIElementById('increment-btn');\n        const btnDecrement: HTMLElement | null = this.getUIElementById('decrement-btn');\n        const btnReset: HTMLElement | null = this.getUIElementById('reset-btn');\n\n        if (btnIncrement) {\n            btnIncrement.addEventListener('click', this.handleIncrement.bind(this));\n        }\n\n        if (btnDecrement) {\n            btnDecrement.addEventListener('click', this.handleDecrement.bind(this));\n        }\n\n        if (btnReset) {\n            btnReset.addEventListener('click', this.handleReset.bind(this));\n        }\n    }\n\n    private setupCounterEventHandlers(): void {\n        // Use a single event listener for all counter events\n        this._counter.addEventListener('change', this.onChange.bind(this));\n    }\n\n    private handleIncrement(): void {\n        const newCount = this._counter.increment();\n        this.updateUI();\n    }\n\n    private handleDecrement(): void {\n        const newCount = this._counter.decrement();\n        this.updateUI();\n    }\n\n    private handleReset(): void {\n        const newCount = this._counter.reset();\n        this.updateUI();\n    }\n\n    private onChange(e: Event): void {\n        console.log(`Counter triggered`);\n        const [newValue] = (e as CustomEvent).detail;\n        console.log(`Counter changed to: ${newValue}`);\n    }\n\n    /** Logic **/\n\n    updateUI(): void {\n        if (!this._ui_lblCount) return;\n        this._ui_lblCount.textContent = this._counter.count.toString();\n    }\n\n\n\n}"],
  "mappings": "AAIO,MAAM,UAAU;AAAA;AAAA,EAmBnB,YAAY,WAAwB,SAAkB;AAftD,SAAQ,eAAmC;AAE3C,SAAQ,UAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AActB,SAAK,aAAa;AAClB,SAAK,WAAW;AAGhB,SAAK,WAAW,YAAY,KAAK;AAGjC,SAAK,eAAe,KAAK,iBAAiB,eAAe;AAGzD,SAAK,SAAS;AAGd,SAAK,oBAAoB;AACzB,SAAK,0BAA0B;AAAA,EACnC;AAAA,EAEQ,iBAAiB,IAAgC;AACrD,WAAO,KAAK,WAAW,cAAc,IAAI,EAAE,EAAE;AAAA,EACjD;AAAA;AAAA,EAGQ,sBAA4B;AAChC,UAAM,eAAmC,KAAK,iBAAiB,eAAe;AAC9E,UAAM,eAAmC,KAAK,iBAAiB,eAAe;AAC9E,UAAM,WAA+B,KAAK,iBAAiB,WAAW;AAEtE,QAAI,cAAc;AACd,mBAAa,iBAAiB,SAAS,KAAK,gBAAgB,KAAK,IAAI,CAAC;AAAA,IAC1E;AAEA,QAAI,cAAc;AACd,mBAAa,iBAAiB,SAAS,KAAK,gBAAgB,KAAK,IAAI,CAAC;AAAA,IAC1E;AAEA,QAAI,UAAU;AACV,eAAS,iBAAiB,SAAS,KAAK,YAAY,KAAK,IAAI,CAAC;AAAA,IAClE;AAAA,EACJ;AAAA,EAEQ,4BAAkC;AAEtC,SAAK,SAAS,iBAAiB,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EACrE;AAAA,EAEQ,kBAAwB;AAC5B,UAAM,WAAW,KAAK,SAAS,UAAU;AACzC,SAAK,SAAS;AAAA,EAClB;AAAA,EAEQ,kBAAwB;AAC5B,UAAM,WAAW,KAAK,SAAS,UAAU;AACzC,SAAK,SAAS;AAAA,EAClB;AAAA,EAEQ,cAAoB;AACxB,UAAM,WAAW,KAAK,SAAS,MAAM;AACrC,SAAK,SAAS;AAAA,EAClB;AAAA,EAEQ,SAAS,GAAgB;AAC7B,YAAQ,IAAI,mBAAmB;AAC/B,UAAM,CAAC,QAAQ,IAAK,EAAkB;AACtC,YAAQ,IAAI,uBAAuB,QAAQ,EAAE;AAAA,EACjD;AAAA;AAAA,EAIA,WAAiB;AACb,QAAI,CAAC,KAAK,aAAc;AACxB,SAAK,aAAa,cAAc,KAAK,SAAS,MAAM,SAAS;AAAA,EACjE;AAIJ;",
  "names": []
}
